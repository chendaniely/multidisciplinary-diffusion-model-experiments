[General]
ModelOutput: network_of_agents.pout

[ModelParameters]
NumberOfTimeTicks: 250
NumberOfAgentsToUpdatePerTimeTick: 30
NumberOfAgentsToSeedOnInit: 30
# 'simultaneous' or 'sequential' updating
UpdateType: sequential
UpdateAlgorithm: random_all
AgentType: lens

[NetworkParameters]
##################################################
# Parameters in the batch sweep config
##################################################
NumberOfAgents: 30

##################################################
# Parameters NOT in the batch sweep config
##################################################

# implement: fast_gnp_random_graph
GraphGenerator: barabasi_albert_graph
#
# BidirectionalBarabasiAlbertGraph
#
# m: Number of edges to attach from a new node to existing nodes
m: 1

#
# DirectedFastGNPRandomGraph parameters
#
ProbEdgeCreation: .0080


[LENSParameters]
##################################################
# Parameters in the batch sweep confi
##################################################
Criterion: 50
# delta
WeightTrainExampleMutationsProb: .2
Epsilon: .2


##################################################
# Parameters NOT in the batch sweep config
##################################################
# 'feed_forward_global_cascade', 'recurrent_attitude'
AgentType: recurrent_attitude
TotalNumberOfProcessingUnits: 10

WeightInFile: /lens_in_files/attitude_01_01.in
WeightsDirectory: /weights
UpdateFromInflInFile: lens_in_files/attitude_01_01.in
# AgentExFile: AgentState.ex  # Should not be used
InflExFile: Infl.ex

NewAgentStateFile: output/AgentState.out
NumberOfWeightTrainExamples: 50

# random, user
PrototypeGeneration: random
NumberOfPrototypes: 1
# if PrototypeGeneration is set to random, the below list will be replace
# if set to user, the below list will be used as the prorotype
# separate the different base situations with a semi-colon, ';'
# the individual weights are space separated or comma separated
WeightBaseExample:
	0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1
